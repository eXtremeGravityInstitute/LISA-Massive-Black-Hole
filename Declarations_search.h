double Tmap(double *params, double tdet);
void searchsky(double *pmax, double **paramx, double *AC, double *EC, double *SAS, double *SES, double *SA, double *SE, double Tobs, int seg, int N, int rep);
void updatesky(int mc, int k, int ll, double *logLx, double **paramx, double **eval, double ***evec, double *min, double *max, int *who, double *heat, int **av, int **cv, double *AC, double *EC, double *SA, double *SE, double Tobs, double Tzero, int N, gsl_rng *r);
void spacecraft(double t, double *x, double *y, double *z);
void RAantenna(double *params, int NF, double *TF, double *FF, double *xi, double *FpAR, double *FpAI, double *FcAR, double *FcAI, double *FpER, double *FpEI, double *FcER, double *FcEI);
void timearray(double *params, RealVector *freq, long N, double *TF, AmpPhaseFDWaveform *ap);
double Likelihood(int ll, double *params, long N, double *AD, double *ED, double *SA, double *SE, double Tobs, double Tzero);
double likelihoodFstat(int ll, double *params, int N, double *AC, double *EC, double *SA, double *SE, double Tobs, double Tzero);
double likelihoodFstatTmax(int ll, double *params, int N, double *AC, double *EC, double *SA, double *SE, double Tobs, double Tzero);
void ResponseFreq(int ll, double *params, long N, double *AS, double *ES, double Tobs, double Tzero);
void cholesky(double **A, double **C, int N);
void Inverse(double **M, double **IM, int d);
void search(double *pmax,  double **paramx, double *AC, double *EC, double *SN, double *SA, double *SE, double Tobs, int seg, int N, int rep);
void update(int mc, int k, int ll, double *logLx, double **paramx, double **eval, double ***evec, double ***history, double *min, double *max, int *who, double *heat, int **av, int **cv, double *AC, double *EC, double *SA, double *SE, double Tobs, double Tzero, int N, gsl_rng *r);
void instrument_noise(double f, double *SAE, double *SXYZ);
void de_jump(double *paramsx, double *paramsy, double **history, int m, int d, gsl_rng *r);
void FisherFast(int ll, double *params, double **Fisher, double *SAS, double *SES, double Tobs, double Tzero, int N);
void FisherMax(int ll, double *params, double **Fisher, double *SN, double Tobs, double Tzero, int N);
void FisherEvec(double **fish, double *ej, double **ev, int d);
void StartStop(int ll, double *params, double Tobs, double tstart, double tstop, double *fstart, double *fstop, double *fr);
double f_at_t(double m1, double m2, double chi1, double chi2, double tc, double t);

void quadratures(double *ct, double *st, double *data1, double *data2, double *Sn, int n);
double log_likelihood_max(int ll, double *H, double *params, double *SN, int N, double Tobs, double Tzero);
double log_likelihood_max_dual(int ll, double *A, double *E, double *params, double *SA, double *SE, int N, double Tobs, double Tzero);
double log_likelihood_APmax_dual(int ll, double *A, double *E, double *params, double *SA, double *SE, int N, double Tobs, double Tzero);
void pbt_shift(double *corr, double *corrf, double *data1, double *data2, double *Sn, int n);
void bwlf(double *in, double *out, int fwrv, int M, int n, double s, double f);
void PDwave(int ll, double *wavef, double *params, int N, double Tobs, double Tzero);
void getfreq(double *fnew, double *tf, double t, double fguess, double m1_SI, double m2_SI, double chi1, double chi2, double tc);
void Intrinsic(int ll, double *params, int NF, double *FF, double *TF, double *PF, double *AF, double Tobs, double Tzero);
void Extrinsic(double *params, double Tend, int NF, double *FF, double *TF, double *PF, double *AF, double *AAmp, double *EAmp, double *APhase, double *EPhase, double *kxm);
void SetUp(int ll, double *params, double fny, int NFmax, int *NFS, double *FF, double *TF, double *PF, double *AF, double Tobs, double Tzero);
double fourier_nwip(double *a, double *b, double *Sn, int n);
double fourier_nwip_Tshift(double delT, double Tobs, double *a, double *b, double *Sn, int n);
void qscanf(char filename[], double *data, double *Sn, double Tobs, int N);
void whiten(double *data, double *Sn, int N);
void TransformC(double *a, double *freqs, double **tf, double **tfR, double **tfI, double Q, double Tobs, int n, int m);
void layerC(double *a, double f, double *tf, double *tfR, double *tfI, double Q, double Tobs, double fix, int n);
void SineGaussianC(double *hs, double *sigpar, double Tobs, int N);
double f_nwip(double *a, double *b, int n);
void phase_blind_time_shift(double *corr, double *corrf, double *data1, double *data2, int n);
double **double_matrix(int N, int M);
void free_double_matrix(double **m, int N);
double *double_vector(int N);
void free_double_vector(double *v);
int *int_vector(int N);
void free_int_vector(int *v);
int **int_matrix(int N, int M);
void free_int_matrix(int **m, int N);
double ***double_tensor(int N, int M, int P);
void free_double_tensor(double ***t, int N, int M);


